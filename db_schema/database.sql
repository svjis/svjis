/********************* ROLES **********************/

CREATE ROLE R_WEB;
/********************* UDFS ***********************/

/****************** GENERATORS ********************/

CREATE GENERATOR GE_ADVERT;
CREATE GENERATOR GE_ADVERT_ATTACHMENT;
CREATE GENERATOR GE_ARTICLE;
CREATE GENERATOR GE_ARTICLE_ATTACHMENT;
CREATE GENERATOR GE_ARTICLE_COMMENT;
CREATE GENERATOR GE_BUILDING;
CREATE GENERATOR GE_BUILDING_ENTRANCE;
CREATE GENERATOR GE_BUILDING_UNIT;
CREATE GENERATOR GE_COMPANY;
CREATE GENERATOR GE_FAULT_REPORT;
CREATE GENERATOR GE_FAULT_REPORT_ATTACHMENT;
CREATE GENERATOR GE_FAULT_REPORT_COMMENT;
CREATE GENERATOR GE_INQUIRY;
CREATE GENERATOR GE_INQUIRY_OPTION;
CREATE GENERATOR GE_INQUIRY_VOTING_LOG;
CREATE GENERATOR GE_LOG;
CREATE GENERATOR GE_LOG_ROBOTS;
CREATE GENERATOR GE_MENU_TREE;
CREATE GENERATOR GE_MESSAGE_QUEUE;
CREATE GENERATOR GE_MINI_NEWS;
CREATE GENERATOR GE_ROLE;
CREATE GENERATOR GE_USER;
/******************** DOMAINS *********************/

/******************* PROCEDURES ******************/

SET TERM ^ ;
CREATE PROCEDURE SP_CREATE_COMPANY (
    NAME Varchar(50) )
RETURNS (
    COMPANY_ID Integer )
AS
BEGIN SUSPEND; END^
SET TERM ; ^

SET TERM ^ ;
CREATE PROCEDURE SP_DROP_COMPANY (
    ID Integer )
AS
BEGIN SUSPEND; END^
SET TERM ; ^

SET TERM ^ ;
CREATE PROCEDURE SP_DROP_USER (
    USER_ID Integer )
AS
BEGIN SUSPEND; END^
SET TERM ; ^

/******************** TABLES **********************/

CREATE TABLE ADVERT
(
  ID Integer NOT NULL,
  COMPANY_ID Integer,
  TYPE_ID Integer,
  HEADER Varchar(50),
  BODY Blob sub_type 1,
  USER_ID Integer,
  PHONE Varchar(30),
  E_MAIL Varchar(50),
  CREATION_DATE Timestamp,
  PUBLISHED Smallint,
  CONSTRAINT ADVERT_PK PRIMARY KEY (ID)
);
CREATE TABLE ADVERT_ATTACHMENT
(
  ID Integer NOT NULL,
  ADVERT_ID Integer,
  USER_ID Integer,
  UPLOAD_TIME Timestamp,
  CONTENT_TYPE Varchar(250),
  FILENAME Varchar(250),
  DATA Blob sub_type 0,
  CONSTRAINT ADVERT_ATTACHMENT_PK PRIMARY KEY (ID)
);
CREATE TABLE ADVERT_TYPE
(
  ID Integer NOT NULL,
  DESCRIPTION Varchar(50),
  CONSTRAINT ADVERT_TYPE_PK PRIMARY KEY (ID)
);
CREATE TABLE APPLICATION_SETUP
(
  ID Varchar(50) NOT NULL,
  COMPANY_ID Integer NOT NULL,
  "VALUE" Varchar(1000),
  CONSTRAINT APPLICATION_SETUP_PK PRIMARY KEY (ID,COMPANY_ID)
);
CREATE TABLE ARTICLE
(
  ID Integer NOT NULL,
  COMPANY_ID Integer,
  MENU_NODE_ID Integer,
  LANGUAGE_ID Integer,
  HEADER Varchar(50),
  DESCRIPTION Blob sub_type 1,
  BODY Blob sub_type 1,
  CREATED_BY_USER_ID Integer,
  CREATION_DATE Timestamp,
  PUBLISHED Smallint,
  COMMENTS_ALLOWED Smallint,
  CONSTRAINT ARTICLE_PK PRIMARY KEY (ID)
);
CREATE TABLE ARTICLE_ATTACHMENT
(
  ID Integer NOT NULL,
  ARTICLE_ID Integer,
  USER_ID Integer,
  UPLOAD_TIME Timestamp,
  CONTENT_TYPE Varchar(250),
  FILENAME Varchar(250),
  DATA Blob sub_type 0,
  CONSTRAINT ARTICLE_ATTACHMENT_PK PRIMARY KEY (ID)
);
CREATE TABLE ARTICLE_COMMENT
(
  ID Integer NOT NULL,
  ARTICLE_ID Integer NOT NULL,
  USER_ID Integer NOT NULL,
  INSERTION_TIME Timestamp,
  BODY Blob sub_type 1,
  CONSTRAINT ARTICLE_COMMENT_PK PRIMARY KEY (ID)
);
CREATE TABLE ARTICLE_INQUIRY
(
  ID Integer NOT NULL,
  ARTICLE_ID Integer NOT NULL,
  DESCRIPTION Blob sub_type 1,
  VOTING_START Timestamp,
  VOTING_END Timestamp,
  CONSTRAINT ARTICLE_INQUIRY_PK PRIMARY KEY (ID)
);
CREATE TABLE ARTICLE_INQUIRY_OPTION
(
  ID Integer NOT NULL,
  INQUIRY_ID Integer,
  DESCRIPTION Varchar(250),
  CONSTRAINT ARTICLE_INQUIRY_OPTION_PK PRIMARY KEY (ID)
);
CREATE TABLE ARTICLE_INQUIRY_VOTING_LOG
(
  ID Integer NOT NULL,
  INQUIRY_OPTION_ID Integer NOT NULL,
  USER_ID Integer NOT NULL,
  VOTING_TIME Timestamp,
  CONSTRAINT ARTICLE_INQUIRY_VOTING_LOG_PK PRIMARY KEY (ID)
);
CREATE TABLE ARTICLE_IS_VISIBLE_TO_ROLE
(
  ARTICLE_ID Integer NOT NULL,
  ROLE_ID Integer NOT NULL,
  CONSTRAINT ARTICLE_IS_VISIBLE_TO_ROLE_PK PRIMARY KEY (ARTICLE_ID,ROLE_ID)
);
CREATE TABLE ARTICLE_WATCHING
(
  ARTICLE_ID Integer NOT NULL,
  USER_ID Integer NOT NULL,
  CONSTRAINT ARTICLE_WATCHING_PK PRIMARY KEY (ARTICLE_ID,USER_ID)
);
CREATE TABLE BOARD_MEMBER_TYPE
(
  ID Integer NOT NULL,
  DESCRIPTION Varchar(50),
  CONSTRAINT BOARD_MEMBER_TYPE_PK PRIMARY KEY (ID)
);
CREATE TABLE BOARD_MEMBER
(
  USER_ID Integer NOT NULL,
  BOARD_MEMBER_TYPE_ID Integer NOT NULL,
  CONSTRAINT BOARD_MEMBER_PK PRIMARY KEY (USER_ID, BOARD_MEMBER_TYPE_ID)
);
CREATE TABLE BUILDING
(
  ID Integer NOT NULL,
  COMPANY_ID Integer,
  ADDRESS Varchar(50),
  CITY Varchar(50),
  POST_CODE Varchar(10),
  REGISTRATION_ID Varchar(50),
  CONSTRAINT BUILDING_PK PRIMARY KEY (ID)
);
CREATE TABLE BUILDING_ENTRANCE
(
  ID Integer NOT NULL,
  BUILDING_ID Integer,
  DESCRIPTION Varchar(50),
  ADDRESS Varchar(50),
  CONSTRAINT BUILDING_ENTRANCE_PK PRIMARY KEY (ID)
);
CREATE TABLE BUILDING_UNIT
(
  ID Integer NOT NULL,
  BUILDING_ID Integer,
  BUILDING_UNIT_TYPE_ID Integer,
  REGISTRATION_ID Varchar(50),
  DESCRIPTION Varchar(50),
  NUMERATOR Integer,
  DENOMINATOR Integer,
  CONSTRAINT BUILDING_UNIT_PK PRIMARY KEY (ID)
);
CREATE TABLE BUILDING_UNIT_TYPE
(
  ID Integer NOT NULL,
  DESCRIPTION Varchar(50),
  CONSTRAINT BUILDING_UNIT_TYPE_PK PRIMARY KEY (ID)
);
CREATE TABLE COMPANY
(
  ID Integer NOT NULL,
  NAME Varchar(50),
  ADDRESS Varchar(50),
  CITY Varchar(50),
  POST_CODE Varchar(10),
  PHONE Varchar(30),
  FAX Varchar(30),
  E_MAIL Varchar(30),
  REGISTRATION_NO Varchar(20),
  VAT_REGISTRATION_NO Varchar(20),
  DATABASE_CREATION_DATE Date,
  INTERNET_DOMAIN Varchar(50),
  PICTURE_CONTENT_TYPE Varchar(250),
  PICTURE_FILENAME Varchar(250),
  PICTURE_DATA Blob sub_type 0,
  CONSTRAINT COMPANY_PK PRIMARY KEY (ID)
);
CREATE TABLE INQUIRY
(
  ID Integer NOT NULL,
  COMPANY_ID Integer NOT NULL,
  USER_ID Integer NOT NULL,
  DESCRIPTION Blob sub_type 1,
  STARTING_DATE Timestamp,
  ENDING_DATE Timestamp,
  ENABLED Integer,
  CONSTRAINT INQUIRY_PK PRIMARY KEY (ID)
);
CREATE TABLE INQUIRY_OPTION
(
  ID Integer NOT NULL,
  INQUIRY_ID Integer,
  DESCRIPTION Varchar(250),
  CONSTRAINT INQUIRY_OPTION_PK PRIMARY KEY (ID)
);
CREATE TABLE INQUIRY_VOTING_LOG
(
  ID Integer NOT NULL,
  INQUIRY_OPTION_ID Integer NOT NULL,
  USER_ID Integer NOT NULL,
  VOTING_TIME Timestamp,
  CONSTRAINT INQUIRY_VOTING_LOG_PK PRIMARY KEY (ID)
);
CREATE TABLE LANGUAGE
(
  ID Integer NOT NULL,
  DESCRIPTION Varchar(50),
  CONSTRAINT LANGUAGE_PK PRIMARY KEY (ID)
);
CREATE TABLE LANGUAGE_DICTIONARY
(
  ID Varchar(50) NOT NULL,
  LANGUAGE_ID Integer NOT NULL,
  TEXT Blob sub_type 1,
  CONSTRAINT LANGUAGE_DICTIONARY_PK PRIMARY KEY (ID,LANGUAGE_ID)
);
CREATE TABLE LOG
(
  ID Integer NOT NULL,
  "TIME" Timestamp,
  USER_ID Integer,
  OPERATION_ID Integer,
  ARTICLE_ID Integer,
  FAULT_ID Integer,
  REMOTE_IP Varchar(16),
  USER_AGENT Varchar(150),
  CONSTRAINT LOG_PK PRIMARY KEY (ID)
);
CREATE TABLE LOG_OPERATION
(
  ID Integer NOT NULL,
  DESCRIPTION Varchar(50),
  CONSTRAINT LOG_OPERATION_PK PRIMARY KEY (ID)
);
CREATE TABLE LOG_ROBOTS
(
  ID Integer NOT NULL,
  USER_AGENT Varchar(150),
  CONSTRAINT LOG_ROBOTS_PK PRIMARY KEY (ID)
);
CREATE TABLE MENU_TREE
(
  ID Integer NOT NULL,
  COMPANY_ID Integer,
  PARENT_ID Integer,
  DESCRIPTION Varchar(50),
  HIDE Smallint,
  CONSTRAINT MENU_TREE_PK PRIMARY KEY (ID)
);
CREATE TABLE MESSAGE_QUEUE
(
  ID Integer NOT NULL,
  MESSAGE_TYPE_ID Integer NOT NULL,
  RECIPIENT Varchar(50),
  SUBJECT Varchar(100),
  BODY Blob sub_type 1,
  CREATION_TIME Timestamp,
  SENDING_TIME Timestamp,
  STATUS Smallint,
  COMPANY_ID Integer NOT NULL,
  CONSTRAINT MESSAGE_QUEUE_PK PRIMARY KEY (ID)
);
CREATE TABLE MESSAGE_TYPE
(
  ID Integer NOT NULL,
  DESCRIPTION Varchar(50),
  CONSTRAINT MESSAGE_TYPE_PK PRIMARY KEY (ID)
);
CREATE TABLE MINI_NEWS
(
  ID Integer NOT NULL,
  COMPANY_ID Integer,
  LANGUAGE_ID Integer,
  NEWS_TIME Timestamp,
  CREATED_BY_USER_ID Integer,
  PUBLISHED Smallint,
  BODY Blob sub_type 1,
  CONSTRAINT MINI_NEWS_PK PRIMARY KEY (ID)
);
CREATE TABLE PERMISSION
(
  ID Integer NOT NULL,
  DESCRIPTION Varchar(50),
  CONSTRAINT PERMISSION_PK PRIMARY KEY (ID)
);
CREATE TABLE "ROLE"
(
  ID Integer NOT NULL,
  COMPANY_ID Integer,
  DESCRIPTION Varchar(50),
  CONSTRAINT ROLE_PK PRIMARY KEY (ID)
);
CREATE TABLE ROLE_HAS_PERMISSION
(
  ROLE_ID Integer NOT NULL,
  PERMISSION_ID Integer NOT NULL,
  CONSTRAINT ROLE_HAS_PERMISSION_PK PRIMARY KEY (ROLE_ID,PERMISSION_ID)
);
CREATE TABLE "USER"
(
  ID Integer NOT NULL,
  COMPANY_ID Integer,
  FIRST_NAME Varchar(30),
  LAST_NAME Varchar(30),
  SALUTATION Varchar(30),
  ADDRESS Varchar(50),
  CITY Varchar(50),
  POST_CODE Varchar(10),
  COUNTRY Varchar(50),
  FIXED_PHONE Varchar(30),
  CELL_PHONE Varchar(30),
  E_MAIL Varchar(50),
  LOGIN Varchar(50) NOT NULL,
  "PASSWORD" Varchar(20),
  ENABLED Integer,
  SHOW_IN_PHONELIST Integer,
  LANGUAGE_ID Integer,
  PASSWORD_HASH Varchar(100),
  PASSWORD_SALT Varchar(100),
  INTERNAL_NOTE Varchar(250),
  PERM_LOGIN_HASH Varchar(50),
  PERM_LOGIN_EXPIRES Timestamp,
  CONSTRAINT USER_PK PRIMARY KEY (ID)
);
CREATE TABLE USER_HAS_BUILDING_UNIT
(
  USER_ID Integer NOT NULL,
  BUILDING_UNIT_ID Integer NOT NULL,
  CONSTRAINT USER_HAS_BUILDING_UNIT_PK PRIMARY KEY (USER_ID,BUILDING_UNIT_ID)
);
CREATE TABLE USER_HAS_ROLE
(
  USER_ID Integer NOT NULL,
  ROLE_ID Integer NOT NULL,
  CONSTRAINT USER_HAS_ROLE_PK PRIMARY KEY (USER_ID,ROLE_ID)
);
CREATE TABLE FAULT_REPORT
(
  ID Integer NOT NULL,
  COMPANY_ID Integer,
  SUBJECT Varchar(50),
  DESCRIPTION Blob sub_type 1,
  CREATION_DATE Timestamp,
  CREATED_BY_USER_ID Integer,
  ASSIGNED_TO_USER_ID Integer,
  CLOSED Smallint,
  BUILDING_ENTRANCE_ID Integer,
  CONSTRAINT FAULT_REPORT_PK PRIMARY KEY (ID)
);
CREATE TABLE FAULT_REPORT_ATTACHMENT
(
  ID Integer NOT NULL,
  FAULT_REPORT_ID Integer,
  USER_ID Integer,
  UPLOAD_TIME Timestamp,
  CONTENT_TYPE Varchar(250),
  FILENAME Varchar(250),
  DATA Blob sub_type 0,
  CONSTRAINT FAULT_REPORT_ATTACHMENT_PK PRIMARY KEY (ID)
);
CREATE TABLE FAULT_REPORT_COMMENT
(
  ID Integer NOT NULL,
  FAULT_REPORT_ID Integer NOT NULL,
  USER_ID Integer NOT NULL,
  INSERTION_TIME Timestamp,
  BODY Blob sub_type 1,
  CONSTRAINT FAULT_REPORT_COMMENT_PK PRIMARY KEY (ID)
);
CREATE TABLE FAULT_REPORT_WATCHING
(
  FAULT_REPORT_ID Integer NOT NULL,
  USER_ID Integer NOT NULL,
  CONSTRAINT FAULT_REPORT_WATCHING_PK PRIMARY KEY (FAULT_REPORT_ID, USER_ID)
);

/********************* VIEWS **********************/

CREATE VIEW V_ARTICLE_NOTIFICATIONS (ID, HEADER, FIRST_NAME, LAST_NAME, "COUNT")
AS  
SELECT a.ID, a.HEADER, c.FIRST_NAME, c.LAST_NAME,
(SELECT COUNT(*) FROM LOG b where a.ID = b.ARTICLE_ID and b.OPERATION_ID = 5) as "COUNT"
FROM ARTICLE a
left join "USER" c on c.ID = a.CREATED_BY_USER_ID
where a.COMPANY_ID = 1 and a.ID > 269
order by a.id desc;
CREATE VIEW V_ARTICLE_NOT_PUBLISHED (ID, COMPANY_ID, HEADER, CREATION_DATE)
AS  
SELECT a.ID, a.COMPANY_ID, a.HEADER, a.CREATION_DATE
FROM ARTICLE a
where a.PUBLISHED = 0
order by a.ID desc;
CREATE VIEW V_ARTICLE_TOP (ARTICLE_ID, HEADER, "COUNT")
AS   
SELECT 
  l.ARTICLE_ID,
  a.HEADER,
  count(*) as "COUNT"
FROM LOG l
LEFT JOIN ARTICLE a ON (a.ID = l.ARTICLE_ID)
WHERE l.OPERATION_ID = 3
GROUP BY
  l.ARTICLE_ID,
  a.HEADER
ORDER BY
  count(*) desc;
CREATE VIEW V_ARTICLE_TOP_EXCL_ROBOTS (ARTICLE_ID, HEADER, "COUNT")
AS  
SELECT 
  l.ARTICLE_ID,
  a.HEADER,
  count(*) as "COUNT"
FROM LOG l
LEFT JOIN ARTICLE a ON (a.ID = l.ARTICLE_ID)
LEFT JOIN LOG_ROBOTS r ON (r.USER_AGENT = l.USER_AGENT)
WHERE l.OPERATION_ID = 3 AND l.USER_AGENT IS NOT NULL AND r.USER_AGENT IS NULL
GROUP BY
  l.ARTICLE_ID,
  a.HEADER
ORDER BY
  count(*) desc;
CREATE VIEW V_ARTICLE_WITHOUT_ROLE (ID, COMPANY_ID, HEADER, CREATION_DATE)
AS 
SELECT 
    a.ID, 
    a.COMPANY_ID, 
    a.HEADER, 
    a.CREATION_DATE
FROM ARTICLE a
left join ARTICLE_IS_VISIBLE_TO_ROLE b on b.ARTICLE_ID = a.ID
where b.ARTICLE_ID is null
order by a.ID desc
;
CREATE VIEW V_INQUIRY_LOG (VOTING_TIME, FIRST_NAME, LAST_NAME, ANSWER, QUESTION)
AS  
SELECT 
  a.VOTING_TIME
  ,u.FIRST_NAME
  ,u.LAST_NAME
  ,b.DESCRIPTION as ANSWER
  ,c.DESCRIPTION as QUESTION
FROM INQUIRY_VOTING_LOG a
left join INQUIRY_OPTION b on b.ID = a.INQUIRY_OPTION_ID
left join INQUIRY c on c.ID = b.INQUIRY_ID
left join "USER" u on u.ID = a.USER_ID
order by a.ID desc;
CREATE VIEW V_LOG (ID, "TIME", USER_ID, COMPANY_ID, LAST_NAME, FIRST_NAME, OPERATION_ID, OPERATION, ARTICLE_ID, ARTICLE, FAULT_ID, FAULT, REMOTE_IP, USER_AGENT)
AS SELECT 
l.ID, 
l."TIME", 
l.USER_ID, 
u.COMPANY_ID,
u.LAST_NAME, 
u.FIRST_NAME, 
l.OPERATION_ID, 
o.DESCRIPTION AS OPERATION, 
l.ARTICLE_ID, 
a.HEADER AS ARTICLE,
l.FAULT_ID,
f.SUBJECT AS FAULT,
l.REMOTE_IP,
l.USER_AGENT
FROM LOG l
LEFT JOIN "USER" u ON (u.ID = l.USER_ID)
LEFT JOIN LOG_OPERATION o ON (o.ID = l.OPERATION_ID)
LEFT JOIN ARTICLE a ON (a.ID = l.ARTICLE_ID)
LEFT JOIN FAULT_REPORT f ON (f.ID = l.FAULT_ID)
LEFT JOIN LOG_ROBOTS r ON (r.USER_AGENT = l.USER_AGENT)
WHERE r.USER_AGENT IS null
ORDER BY l.ID DESC;
CREATE VIEW V_LOG_BOT_STAT (USER_AGENT, "COUNT", LAST_TIME)
AS      
SELECT a.USER_AGENT, count(*) AS "COUNT", max(l."TIME") AS "LAST_TIME"
FROM LOG_ROBOTS a
LEFT JOIN LOG l ON (l.USER_AGENT = a.USER_AGENT)
group by a.USER_AGENT
order by count(*) desc;
CREATE VIEW V_LOG_BROWSERS (BROWSER, "COUNT")
AS 
select BROWSER, "COUNT"
from (
SELECT 'MSIE' as "BROWSER", count(*) as "COUNT" FROM LOG a where a.USER_AGENT like '%MSIE%'
UNION
SELECT 'Firefox' as "BROWSER", count(*) as "COUNT" FROM LOG a where a.USER_AGENT like '%Firefox%'
UNION
SELECT 'iPhone' as "BROWSER", count(*) as "COUNT" FROM LOG a where a.USER_AGENT like '%iPhone%'
UNION
SELECT 'iPad' as "BROWSER", count(*) as "COUNT" FROM LOG a where a.USER_AGENT like '%iPad%'
UNION
SELECT 'Android' as "BROWSER", count(*) as "COUNT" FROM LOG a where a.USER_AGENT like '%Android%'
UNION
SELECT 'Symbian' as "BROWSER", count(*) as "COUNT" FROM LOG a where a.USER_AGENT like '%Symbian%'
UNION
SELECT 'Chrome' as "BROWSER", count(*) as "COUNT" FROM LOG a where a.USER_AGENT like '%Chrome%'
UNION
SELECT 'Opera' as "BROWSER", count(*) as "COUNT" FROM LOG a where a.USER_AGENT like '%Opera%'
UNION
SELECT 'X11' as "BROWSER", count(*) as "COUNT" FROM LOG a where a.USER_AGENT like '%X11%'
)
order by "COUNT" desc
;
CREATE VIEW V_LOG_MONTH_COUNTER ("Year", "Month", "Total", "Robots", "Users")
AS     
SELECT 
    total."Year",
    total."Month",
    total."Total",
    robots."Robots",
    users."Users"
FROM 
(
SELECT 
    extract(Year from a."TIME") AS "Year",
    extract(Month from a."TIME") AS "Month",
    count(*) AS "Total"
FROM LOG a
group by 
    extract(Year from a."TIME"),
    extract(Month from a."TIME")
) total
LEFT JOIN 
(
SELECT 
    extract(Year from a."TIME") AS "Year",
    extract(Month from a."TIME") AS "Month",
    count(*) AS "Robots"
FROM LOG a
LEFT JOIN LOG_ROBOTS r ON (r.USER_AGENT = a.USER_AGENT)
WHERE r.USER_AGENT IS NOT null
group by 
    extract(Year from a."TIME"),
    extract(Month from a."TIME")
) robots ON (robots."Year" = total."Year") and (robots."Month" = total."Month")
LEFT JOIN 
(
SELECT 
    extract(Year from a."TIME") AS "Year",
    extract(Month from a."TIME") AS "Month",
    count(*) AS "Users"
FROM LOG a
LEFT JOIN LOG_ROBOTS r ON (r.USER_AGENT = a.USER_AGENT)
WHERE r.USER_AGENT IS null
group by 
    extract(Year from a."TIME"),
    extract(Month from a."TIME")
) users ON (users."Year" = total."Year") and (users."Month" = total."Month")
order by
    "Year",
    "Month"
;
CREATE VIEW V_USERS_HAS_ROLE (DESCRIPTION, LAST_NAME, FIRST_NAME)
AS   
SELECT a.DESCRIPTION, u.LAST_NAME, u.FIRST_NAME
FROM "ROLE" a
left join USER_HAS_ROLE h on (h.ROLE_ID = a.ID)
left join "USER" u on (u.ID = h.USER_ID)
where a.id in (1,2,3,5) and (u.ID is not null)
order by a.DESCRIPTION, u.LAST_NAME, u.FIRST_NAME;
CREATE VIEW V_USERS_MISSING_ROLE_ALL (ID, COMPANY_ID, FIRST_NAME, LAST_NAME, ENABLED)
AS  
SELECT a.ID, a.COMPANY_ID, a.FIRST_NAME, a.LAST_NAME, a.ENABLED
FROM "USER" a
left join USER_HAS_ROLE h on (h.USER_ID = a.ID) and (h.ROLE_ID = 6)
where a.COMPANY_ID = 1 and h.ROLE_ID is null
;
CREATE VIEW V_USERS_MISSING_ROLE_VLASTNIK (FIRST_NAME, LAST_NAME, ENABLED, LAST_LOGIN)
AS  
SELECT a.FIRST_NAME, a.LAST_NAME, a.ENABLED, c.LAST_LOGIN
FROM "USER" a
left join USER_HAS_ROLE b on b.USER_ID = a.ID and b.ROLE_ID = 4
left join 
(
SELECT a.USER_ID, max(a."TIME") as LAST_LOGIN
FROM LOG a
where a.OPERATION_ID = 1
group by
a.USER_ID
) c on c.USER_ID = a.ID
where a.COMPANY_ID = 1 and a.ENABLED = 1 and b.ROLE_ID is null;
CREATE VIEW V_USERS_UNITS (FIRST_NAME, LAST_NAME, DESCRIPTION)
AS  
SELECT 
u.FIRST_NAME,
u.LAST_NAME,
b.DESCRIPTION
FROM USER_HAS_BUILDING_UNIT a
LEFT JOIN "USER" u ON u.ID = a.USER_ID
LEFT JOIN BUILDING_UNIT b ON b.ID = a.BUILDING_UNIT_ID
ORDER BY u.LAST_NAME;
/******************* EXCEPTIONS *******************/

/******************** TRIGGERS ********************/

SET TERM ^ ;
CREATE TRIGGER TR_ADVERT FOR ADVERT ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
  if (new.id is null) then
  begin
    new.id = gen_id( GE_ADVERT, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_ADVERT_ATTACHMENT FOR ADVERT_ATTACHMENT ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
  if (new.id is null) then
  begin
    new.id = gen_id( GE_ADVERT_ATTACHMENT, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_ARTICLE FOR ARTICLE ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
  if (new.id is null) then
  begin
    new.id = gen_id( GE_ARTICLE, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_ARTICLE_ATTACHMENT FOR ARTICLE_ATTACHMENT ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
  if (new.id is null) then
  begin
    new.id = gen_id( GE_ARTICLE_ATTACHMENT, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_ARTICLE_COMMENT FOR ARTICLE_COMMENT ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
  if (new.id is null) then
  begin
    new.id = gen_id( GE_ARTICLE_COMMENT, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_BUILDING FOR BUILDING ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
  if (new.id is null) then
  begin
    new.id = gen_id( GE_BUILDING, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_BUILDING_ENTRANCE FOR BUILDING_ENTRANCE ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
  if (new.id is null) then
  begin
    new.id = gen_id( GE_BUILDING_ENTRANCE, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_BUILDING_UNIT FOR BUILDING_UNIT ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
  if (new.id is null) then
  begin
    new.id = gen_id( GE_BUILDING_UNIT, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_COMPANY FOR COMPANY ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
  if (new.id is null) then
  begin
    new.id = gen_id( GE_COMPANY, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_INQUIRY FOR INQUIRY ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
    if (new.id is null) then
  begin
    new.id = gen_id( GE_INQUIRY, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_INQUIRY_OPTION FOR INQUIRY_OPTION ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
    if (new.id is null) then
  begin
    new.id = gen_id( GE_INQUIRY_OPTION, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_INQUIRY_VOTING_LOG FOR INQUIRY_VOTING_LOG ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
    if (new.id is null) then
  begin
    new.id = gen_id( GE_INQUIRY_VOTING_LOG, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_LOG FOR LOG ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
if (new.id is null) then
  begin
    new.id = gen_id( GE_LOG, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_LOG_ROBOTS FOR LOG_ROBOTS ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
  if (new.id is null) then
  begin
    new.id = gen_id( GE_LOG_ROBOTS, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_MENU_TREE FOR MENU_TREE ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
  if (new.id is null) then
  begin
    new.id = gen_id( GE_MENU_TREE, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_MESSAGE_QUEUE FOR MESSAGE_QUEUE ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
  if (new.id is null) then
  begin
    new.id = gen_id( GE_MESSAGE_QUEUE, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_MINI_NEWS FOR MINI_NEWS ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
if (new.id is null) then
  begin
    new.id = gen_id( GE_MINI_NEWS, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_ROLE FOR ROLE ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
  if (new.id is null) then
  begin
    new.id = gen_id( GE_ROLE, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_USER FOR "USER" ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
  if (new.id is null) then
  begin
    new.id = gen_id( GE_USER, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_FAULT_REPORT FOR FAULT_REPORT ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
  if (new.id is null) then
  begin
    new.id = gen_id( GE_FAULT_REPORT, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_FAULT_REPORT_ATTACHMENT FOR FAULT_REPORT_ATTACHMENT ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
  if (new.id is null) then
  begin
    new.id = gen_id( GE_FAULT_REPORT_ATTACHMENT, 1 );
  end
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TR_FAULT_REPORT_COMMENT FOR FAULT_REPORT_COMMENT ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
  if (new.id is null) then
  begin
    new.id = gen_id( GE_FAULT_REPORT_COMMENT, 1 );
  end
END^
SET TERM ; ^

SET TERM ^ ;
ALTER PROCEDURE SP_CREATE_COMPANY (
    NAME Varchar(50) )
RETURNS (
    COMPANY_ID Integer )
AS
DECLARE VARIABLE ID INT;
DECLARE VARIABLE ADMIN_ROLE_ID INT;
DECLARE VARIABLE ANONYMOUS_ROLE_ID INT;
DECLARE VARIABLE ANONYMOUS_USER_ID INT;
BEGIN
  
  /* COMPANY */
  INSERT INTO COMPANY (NAME, ADDRESS, CITY, POST_CODE, PHONE, FAX, E_MAIL, REGISTRATION_NO, VAT_REGISTRATION_NO, DATABASE_CREATION_DATE, INTERNET_DOMAIN, PICTURE_CONTENT_TYPE, PICTURE_FILENAME, PICTURE_DATA)
  VALUES (:NAME, '', '', '', '', '', '', '', '', current_timestamp, '', '', '', null) RETURNING ID INTO :COMPANY_ID;
  
  /* BUILDING */
  INSERT INTO BUILDING (COMPANY_ID, ADDRESS, CITY, POST_CODE, REGISTRATION_ID) VALUES (:COMPANY_ID, '', '', '', '');
  
  /* MENU */
  INSERT INTO MENU_TREE (COMPANY_ID, PARENT_ID, DESCRIPTION, HIDE) VALUES (:COMPANY_ID, null, 'Vývěska', 0);
  INSERT INTO MENU_TREE (COMPANY_ID, PARENT_ID, DESCRIPTION, HIDE) VALUES (:COMPANY_ID, null, 'Zápisy', 0);
  INSERT INTO MENU_TREE (COMPANY_ID, PARENT_ID, DESCRIPTION, HIDE) VALUES (:COMPANY_ID, null, 'Smlouvy', 0);
  INSERT INTO MENU_TREE (COMPANY_ID, PARENT_ID, DESCRIPTION, HIDE) VALUES (:COMPANY_ID, null, 'Dokumenty', 0);
  
  /* ROLE */
  INSERT INTO "ROLE" (COMPANY_ID, DESCRIPTION) VALUES (:COMPANY_ID, 'Administrátor') RETURNING ID INTO :ADMIN_ROLE_ID;
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ADMIN_ROLE_ID, 102);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ADMIN_ROLE_ID, 103);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ADMIN_ROLE_ID, 304);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ADMIN_ROLE_ID, 100);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ADMIN_ROLE_ID, 101);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ADMIN_ROLE_ID, 202);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ADMIN_ROLE_ID, 106);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ADMIN_ROLE_ID, 104);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ADMIN_ROLE_ID, 105);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ADMIN_ROLE_ID, 300);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ADMIN_ROLE_ID, 301);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ADMIN_ROLE_ID, 302);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ADMIN_ROLE_ID, 303);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ADMIN_ROLE_ID, 400);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ADMIN_ROLE_ID, 401);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ADMIN_ROLE_ID, 402);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ADMIN_ROLE_ID, 403);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ADMIN_ROLE_ID, 500);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ADMIN_ROLE_ID, 501);
  INSERT INTO "ROLE" (COMPANY_ID, DESCRIPTION) VALUES (:COMPANY_ID, 'Redaktor') RETURNING ID INTO :ID;
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 304);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 101);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 202);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 300);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 106);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 301);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 302);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 303);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 105);
  INSERT INTO "ROLE" (COMPANY_ID, DESCRIPTION) VALUES (:COMPANY_ID, 'Editor') RETURNING ID INTO :ID;
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 101);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 202);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 300);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 106);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 105);
  INSERT INTO "ROLE" (COMPANY_ID, DESCRIPTION) VALUES (:COMPANY_ID, 'Vlastník') RETURNING ID INTO :ID;
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 102);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 103);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 101);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 203);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 202);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 106);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 104);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 400);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 401);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 403);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 500);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 501);
  INSERT INTO "ROLE" (COMPANY_ID, DESCRIPTION) VALUES (:COMPANY_ID, 'Člen výboru') RETURNING ID INTO :ID;
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 102);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 103);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 101);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 202);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 106);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 104);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 400);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 401);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 402);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 403);
  INSERT INTO "ROLE" (COMPANY_ID, DESCRIPTION) VALUES (:COMPANY_ID, 'Nepřihlášený uživatel') RETURNING ID INTO :ANONYMOUS_ROLE_ID;
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ANONYMOUS_ROLE_ID, 101);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ANONYMOUS_ROLE_ID, 106);
  INSERT INTO "ROLE" (COMPANY_ID, DESCRIPTION) VALUES (:COMPANY_ID, 'Externí osoba') RETURNING ID INTO :ID;
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 102);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 101);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 202);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 106);
    INSERT INTO ROLE_HAS_PERMISSION (ROLE_ID, PERMISSION_ID) VALUES (:ID, 104);
  
  /* USER */  
  INSERT INTO "USER" (COMPANY_ID, FIRST_NAME, LAST_NAME, SALUTATION, ADDRESS, CITY, POST_CODE, COUNTRY, FIXED_PHONE, CELL_PHONE, E_MAIL, LOGIN, "PASSWORD", ENABLED, SHOW_IN_PHONELIST, LANGUAGE_ID, INTERNAL_NOTE) 
    VALUES (:COMPANY_ID, 'Admin', 'Admin', '', '', '', '', '', '', '', '', 'admin', 'masterkey', 1, 0, 1, '') RETURNING ID INTO :ID;
    INSERT INTO USER_HAS_ROLE (USER_ID, ROLE_ID) VALUES (:ID, :ADMIN_ROLE_ID);
    
  INSERT INTO "USER" (COMPANY_ID, FIRST_NAME, LAST_NAME, SALUTATION, ADDRESS, CITY, POST_CODE, COUNTRY, FIXED_PHONE, CELL_PHONE, E_MAIL, LOGIN, "PASSWORD", ENABLED, SHOW_IN_PHONELIST, LANGUAGE_ID) 
    VALUES (:COMPANY_ID, 'Anonymní', 'Uživatel', '', '', '', '', '', '', '', '', 'anonymous', '', 0, 0, 1) RETURNING ID INTO :ANONYMOUS_USER_ID;
    INSERT INTO USER_HAS_ROLE (USER_ID, ROLE_ID) VALUES (:ANONYMOUS_USER_ID, :ANONYMOUS_ROLE_ID);
  
  /* APPLICATION SETUP */
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('advert.page.size', :COMPANY_ID, 10);
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('anonymous.user.id', :COMPANY_ID, :ANONYMOUS_USER_ID);
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('article.menu.default.item', :COMPANY_ID, '0');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('article.page.size', :COMPANY_ID, '10');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('article.top.months', :COMPANY_ID, '3');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('article.top.size', :COMPANY_ID, '5');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('error.report.recipient', :COMPANY_ID, 'admin@mycompany.com');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('faults.page.size', :COMPANY_ID, '10');
  --INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('google.analytics.id', :COMPANY_ID, '');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('http.meta.description', :COMPANY_ID, 'stránky Společenství vlastníků');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('http.meta.keywords', :COMPANY_ID, 'svj, společenství');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('mail.login', :COMPANY_ID, 'smtplogin');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('mail.password', :COMPANY_ID, 'smtppass');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('mail.sender', :COMPANY_ID, 'noreply@mycompany.com');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('mail.smtp', :COMPANY_ID, '');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('mail.smtp.port', :COMPANY_ID, '25');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('mail.smtp.ssl', :COMPANY_ID, 'false');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('mail.template.article.notification', :COMPANY_ID, 'Dobrý den,<br><br>rádi bychom Vás upozornili na následující článek na stránkách SVJ. <br><br>%s<br><br>S pozdravem,<br>Výbor SVJ');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('mail.template.comment.notification', :COMPANY_ID, 'Uživatel %s přidal nový komentář k článku %s: <br><br><br>%s');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('mail.template.fault.assigned', :COMPANY_ID, 'Uživatel %s vám přiřadil tiket %s: <br><br><br>%s');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('mail.template.fault.closed', :COMPANY_ID, 'Uživatel %s uzavřel tiket %s: <br><br><br>%s');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('mail.template.fault.reopened', :COMPANY_ID, 'Uživatel %s znovu otevřel tiket %s: <br><br><br>%s');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('mail.template.fault.comment.notification', :COMPANY_ID, 'Uživatel %s přidal nový komentář k závadě %s: <br><br><br>%s');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('mail.template.fault.notification', :COMPANY_ID, 'Uživatel %s vložil novou závadu %s: <br><br><br>%s');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('mail.template.lost.password', :COMPANY_ID, '<html><body>Dobrý den,<br>Vaše přihlašovací údaje jsou:<br><br>%s<br><br>Web SVJ</body></html>');
  INSERT INTO APPLICATION_SETUP (ID, COMPANY_ID, "VALUE") VALUES ('permanent.login.hours', :COMPANY_ID, '336');
 
END^
SET TERM ; ^


SET TERM ^ ;
ALTER PROCEDURE SP_DROP_COMPANY (
    ID Integer )
AS
BEGIN

  /* EMPTY LOG */
  DELETE FROM LOG a WHERE a.USER_ID in (SELECT u.ID FROM "USER" u WHERE u.COMPANY_ID = :ID);

  /* USER HAS */
  DELETE FROM USER_HAS_BUILDING_UNIT a WHERE a.USER_ID in (SELECT u.ID FROM "USER" u WHERE u.COMPANY_ID = :ID);
  DELETE FROM USER_HAS_ROLE a WHERE a.USER_ID in (SELECT u.ID FROM "USER" u WHERE u.COMPANY_ID = :ID);  
  
  /* ARTICLE */
  DELETE FROM ARTICLE_ATTACHMENT a WHERE a.ARTICLE_ID in (SELECT u.ID FROM ARTICLE u WHERE u.COMPANY_ID = :ID);
  DELETE FROM ARTICLE_COMMENT a WHERE a.ARTICLE_ID in (SELECT u.ID FROM ARTICLE u WHERE u.COMPANY_ID = :ID);
  DELETE FROM ARTICLE_IS_VISIBLE_TO_ROLE a WHERE a.ARTICLE_ID in (SELECT u.ID FROM ARTICLE u WHERE u.COMPANY_ID = :ID);
  DELETE FROM ARTICLE a WHERE a.COMPANY_ID = :ID;
  
  /* NEWS */
  DELETE FROM MINI_NEWS a WHERE a.COMPANY_ID  = :ID;
  
  /* BUILDING */
  DELETE FROM BUILDING_UNIT a WHERE a.BUILDING_ID in (SELECT u.ID FROM BUILDING u WHERE u.COMPANY_ID = :ID);
  DELETE FROM BUILDING a WHERE a.COMPANY_ID = :ID;
  
  /* INQUIRY */
  DELETE FROM INQUIRY_VOTING_LOG a WHERE a.USER_ID in (SELECT u.ID FROM "USER" u WHERE u.COMPANY_ID = :ID);
  DELETE FROM INQUIRY_OPTION a WHERE a.INQUIRY_ID in (SELECT u.ID FROM INQUIRY u WHERE u.COMPANY_ID = :ID);
  DELETE FROM INQUIRY a WHERE a.COMPANY_ID = :ID;
  
  /* MENU_TREE */
  DELETE FROM MENU_TREE a WHERE a.COMPANY_ID = :ID AND a.PARENT_ID IS NOT NULL;
  DELETE FROM MENU_TREE a WHERE a.COMPANY_ID = :ID;
  
  /* FAULT_REPORT */
  DELETE FROM FAULT_REPORT_ATTACHMENT a WHERE a.FAULT_REPORT_ID in (SELECT a.ID FROM FAULT_REPORT a WHERE a.COMPANY_ID = :ID);
  DELETE FROM FAULT_REPORT_COMMENT a WHERE a.FAULT_REPORT_ID in (SELECT a.ID FROM FAULT_REPORT a WHERE a.COMPANY_ID = :ID);
  DELETE FROM FAULT_REPORT_WATCHING a WHERE a.FAULT_REPORT_ID in (SELECT a.ID FROM FAULT_REPORT a WHERE a.COMPANY_ID = :ID);
  DELETE FROM FAULT_REPORT a WHERE a.COMPANY_ID = :ID;
  
  /* ROLE */
  DELETE FROM ROLE_HAS_PERMISSION a WHERE a.ROLE_ID in (SELECT u.ID FROM "ROLE" u WHERE u.COMPANY_ID = :ID);
  DELETE FROM "ROLE" a WHERE a.COMPANY_ID  = :ID;
  
  /* USER */
  DELETE FROM "USER" a WHERE a.COMPANY_ID  = :ID;
  
  /* COMPANY */
  DELETE FROM MENU_TREE a WHERE a.COMPANY_ID  = :ID;
  DELETE FROM MESSAGE_QUEUE a WHERE a.COMPANY_ID  = :ID;
  DELETE FROM APPLICATION_SETUP a WHERE a.COMPANY_ID  = :ID;
  DELETE FROM COMPANY a WHERE a.ID  = :ID;
 
END^
SET TERM ; ^


SET TERM ^ ;
ALTER PROCEDURE SP_DROP_USER (
    USER_ID Integer )
AS
BEGIN

    DELETE FROM USER_HAS_BUILDING_UNIT a WHERE a.USER_ID = :USER_ID;
    DELETE FROM USER_HAS_ROLE a WHERE a.USER_ID = :USER_ID;
    DELETE FROM LOG a WHERE a.USER_ID = :USER_ID;
    DELETE FROM "USER" a WHERE a.ID = :USER_ID;
 
END^
SET TERM ; ^

ALTER TABLE ADVERT ADD
  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (ID);
ALTER TABLE ADVERT ADD
  FOREIGN KEY (TYPE_ID) REFERENCES ADVERT_TYPE (ID);
ALTER TABLE ADVERT ADD
  FOREIGN KEY (USER_ID) REFERENCES "USER" (ID);
ALTER TABLE ADVERT_ATTACHMENT ADD
  FOREIGN KEY (ADVERT_ID) REFERENCES ADVERT (ID);
ALTER TABLE ADVERT_ATTACHMENT ADD
  FOREIGN KEY (USER_ID) REFERENCES "USER" (ID);
ALTER TABLE APPLICATION_SETUP ADD
  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (ID);
ALTER TABLE ARTICLE ADD
  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (ID);
ALTER TABLE ARTICLE ADD
  FOREIGN KEY (MENU_NODE_ID) REFERENCES MENU_TREE (ID);
ALTER TABLE ARTICLE ADD
  FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE (ID);
ALTER TABLE ARTICLE ADD
  FOREIGN KEY (CREATED_BY_USER_ID) REFERENCES "USER" (ID);
CREATE DESCENDING INDEX IDX_ARTICLE1 ON ARTICLE (CREATION_DATE);
ALTER TABLE ARTICLE_ATTACHMENT ADD
  FOREIGN KEY (ARTICLE_ID) REFERENCES ARTICLE (ID);
ALTER TABLE ARTICLE_ATTACHMENT ADD
  FOREIGN KEY (USER_ID) REFERENCES "USER" (ID);
ALTER TABLE ARTICLE_COMMENT ADD
  FOREIGN KEY (ARTICLE_ID) REFERENCES ARTICLE (ID);
ALTER TABLE ARTICLE_COMMENT ADD
  FOREIGN KEY (USER_ID) REFERENCES "USER" (ID);
ALTER TABLE ARTICLE_INQUIRY ADD
  FOREIGN KEY (ARTICLE_ID) REFERENCES ARTICLE (ID);
ALTER TABLE ARTICLE_INQUIRY_OPTION ADD
  FOREIGN KEY (INQUIRY_ID) REFERENCES ARTICLE_INQUIRY (ID);
ALTER TABLE ARTICLE_INQUIRY_VOTING_LOG ADD
  FOREIGN KEY (INQUIRY_OPTION_ID) REFERENCES ARTICLE_INQUIRY_OPTION (ID);
ALTER TABLE ARTICLE_INQUIRY_VOTING_LOG ADD
  FOREIGN KEY (USER_ID) REFERENCES "USER" (ID);
ALTER TABLE ARTICLE_IS_VISIBLE_TO_ROLE ADD
  FOREIGN KEY (ROLE_ID) REFERENCES "ROLE" (ID);
ALTER TABLE ARTICLE_IS_VISIBLE_TO_ROLE ADD
  FOREIGN KEY (ARTICLE_ID) REFERENCES ARTICLE (ID);
ALTER TABLE ARTICLE_WATCHING ADD
  FOREIGN KEY (ARTICLE_ID) REFERENCES ARTICLE (ID);  
ALTER TABLE ARTICLE_WATCHING ADD
  FOREIGN KEY (USER_ID) REFERENCES "USER" (ID);  
ALTER TABLE BOARD_MEMBER ADD
  FOREIGN KEY (USER_ID) REFERENCES "USER" (ID);  
ALTER TABLE BOARD_MEMBER ADD
  FOREIGN KEY (BOARD_MEMBER_TYPE_ID) REFERENCES BOARD_MEMBER_TYPE (ID);
ALTER TABLE BUILDING ADD
  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (ID);
ALTER TABLE BUILDING_ENTRANCE ADD
  FOREIGN KEY (BUILDING_ID) REFERENCES BUILDING (ID);  
ALTER TABLE BUILDING_UNIT ADD
  FOREIGN KEY (BUILDING_ID) REFERENCES BUILDING (ID);
ALTER TABLE BUILDING_UNIT ADD
  FOREIGN KEY (BUILDING_UNIT_TYPE_ID) REFERENCES BUILDING_UNIT_TYPE (ID);
ALTER TABLE INQUIRY ADD
  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (ID);
ALTER TABLE INQUIRY ADD
  FOREIGN KEY (USER_ID) REFERENCES "USER" (ID);
ALTER TABLE INQUIRY_OPTION ADD
  FOREIGN KEY (INQUIRY_ID) REFERENCES INQUIRY (ID);
ALTER TABLE INQUIRY_VOTING_LOG ADD
  FOREIGN KEY (INQUIRY_OPTION_ID) REFERENCES INQUIRY_OPTION (ID);
ALTER TABLE INQUIRY_VOTING_LOG ADD
  FOREIGN KEY (USER_ID) REFERENCES "USER" (ID);
ALTER TABLE LANGUAGE_DICTIONARY ADD
  FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE (ID);
ALTER TABLE LOG ADD
  FOREIGN KEY (USER_ID) REFERENCES "USER" (ID);
ALTER TABLE LOG ADD
  FOREIGN KEY (OPERATION_ID) REFERENCES LOG_OPERATION (ID);
ALTER TABLE LOG ADD
  FOREIGN KEY (ARTICLE_ID) REFERENCES ARTICLE (ID);
CREATE INDEX IDX_LOG1 ON LOG (ARTICLE_ID,OPERATION_ID);
ALTER TABLE LOG ADD
  FOREIGN KEY (FAULT_ID) REFERENCES FAULT_REPORT (ID);
CREATE INDEX IDX_LOG2 ON LOG (FAULT_ID,OPERATION_ID);
ALTER TABLE MENU_TREE ADD
  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (ID);
ALTER TABLE MENU_TREE ADD
  FOREIGN KEY (PARENT_ID) REFERENCES MENU_TREE (ID);
ALTER TABLE MESSAGE_QUEUE ADD
  FOREIGN KEY (MESSAGE_TYPE_ID) REFERENCES MESSAGE_TYPE (ID);
ALTER TABLE MESSAGE_QUEUE ADD
  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (ID);
ALTER TABLE MINI_NEWS ADD
  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (ID);
ALTER TABLE MINI_NEWS ADD
  FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE (ID);
ALTER TABLE MINI_NEWS ADD
  FOREIGN KEY (CREATED_BY_USER_ID) REFERENCES "USER" (ID);
ALTER TABLE "ROLE" ADD
  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (ID);
ALTER TABLE ROLE_HAS_PERMISSION ADD
  FOREIGN KEY (ROLE_ID) REFERENCES "ROLE" (ID);
ALTER TABLE ROLE_HAS_PERMISSION ADD
  FOREIGN KEY (PERMISSION_ID) REFERENCES PERMISSION (ID);
ALTER TABLE "USER" ADD
  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (ID);
ALTER TABLE "USER" ADD
  FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE (ID);
ALTER TABLE USER_HAS_BUILDING_UNIT ADD
  FOREIGN KEY (USER_ID) REFERENCES "USER" (ID);
ALTER TABLE USER_HAS_BUILDING_UNIT ADD
  FOREIGN KEY (BUILDING_UNIT_ID) REFERENCES BUILDING_UNIT (ID);
ALTER TABLE USER_HAS_ROLE ADD
  FOREIGN KEY (USER_ID) REFERENCES "USER" (ID);
ALTER TABLE USER_HAS_ROLE ADD
  FOREIGN KEY (ROLE_ID) REFERENCES "ROLE" (ID);
ALTER TABLE FAULT_REPORT ADD
  FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (ID);  
ALTER TABLE FAULT_REPORT ADD
  FOREIGN KEY (CREATED_BY_USER_ID) REFERENCES "USER" (ID);
ALTER TABLE FAULT_REPORT ADD
  FOREIGN KEY (ASSIGNED_TO_USER_ID) REFERENCES "USER" (ID);
ALTER TABLE FAULT_REPORT ADD
  FOREIGN KEY (BUILDING_ENTRANCE_ID) REFERENCES BUILDING_ENTRANCE (ID);
ALTER TABLE FAULT_REPORT_ATTACHMENT ADD
  FOREIGN KEY (FAULT_REPORT_ID) REFERENCES FAULT_REPORT (ID);  
ALTER TABLE FAULT_REPORT_ATTACHMENT ADD
  FOREIGN KEY (USER_ID) REFERENCES "USER" (ID);
ALTER TABLE FAULT_REPORT_COMMENT ADD
  FOREIGN KEY (FAULT_REPORT_ID) REFERENCES FAULT_REPORT (ID);  
ALTER TABLE FAULT_REPORT_COMMENT ADD
  FOREIGN KEY (USER_ID) REFERENCES "USER" (ID);
ALTER TABLE FAULT_REPORT_WATCHING ADD
  FOREIGN KEY (FAULT_REPORT_ID) REFERENCES FAULT_REPORT (ID);
ALTER TABLE FAULT_REPORT_WATCHING ADD
  FOREIGN KEY (USER_ID) REFERENCES "USER" (ID);

GRANT R_WEB TO WEB;

GRANT USAGE ON SEQUENCE GE_ADVERT TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_ADVERT_ATTACHMENT TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_ARTICLE TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_ARTICLE_ATTACHMENT TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_ARTICLE_COMMENT TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_BUILDING TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_BUILDING_ENTRANCE TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_BUILDING_UNIT TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_COMPANY TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_FAULT_REPORT TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_FAULT_REPORT_ATTACHMENT TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_FAULT_REPORT_COMMENT TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_INQUIRY TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_INQUIRY_OPTION TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_INQUIRY_VOTING_LOG TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_LOG TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_LOG_ROBOTS TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_MENU_TREE TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_MESSAGE_QUEUE TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_MINI_NEWS TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_ROLE TO ROLE R_WEB;
GRANT USAGE ON SEQUENCE GE_USER TO ROLE R_WEB;

GRANT EXECUTE
 ON PROCEDURE SP_CREATE_COMPANY TO  SYSDBA;

GRANT EXECUTE
 ON PROCEDURE SP_DROP_COMPANY TO  SYSDBA;

GRANT EXECUTE
 ON PROCEDURE SP_DROP_USER TO  SYSDBA;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ADVERT TO ROLE R_WEB;
 
GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ADVERT TO SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ADVERT_ATTACHMENT TO ROLE R_WEB;
 
GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ADVERT_ATTACHMENT TO SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ADVERT_TYPE TO ROLE R_WEB;
 
GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ADVERT_TYPE TO SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON APPLICATION_SETUP TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON APPLICATION_SETUP TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARTICLE TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARTICLE TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARTICLE_ATTACHMENT TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARTICLE_ATTACHMENT TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARTICLE_COMMENT TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARTICLE_COMMENT TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARTICLE_INQUIRY TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARTICLE_INQUIRY TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARTICLE_INQUIRY_OPTION TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARTICLE_INQUIRY_OPTION TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARTICLE_INQUIRY_VOTING_LOG TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARTICLE_INQUIRY_VOTING_LOG TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARTICLE_IS_VISIBLE_TO_ROLE TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARTICLE_IS_VISIBLE_TO_ROLE TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARTICLE_WATCHING TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ARTICLE_WATCHING TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON BOARD_MEMBER_TYPE TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON BOARD_MEMBER_TYPE TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON BOARD_MEMBER TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON BOARD_MEMBER TO SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON BUILDING TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON BUILDING TO  SYSDBA WITH GRANT OPTION;
 
GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON BUILDING_ENTRANCE TO ROLE R_WEB;
 
GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON BUILDING_ENTRANCE TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON BUILDING_UNIT TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON BUILDING_UNIT TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON BUILDING_UNIT_TYPE TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON BUILDING_UNIT_TYPE TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON COMPANY TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON COMPANY TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON INQUIRY TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON INQUIRY TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON INQUIRY_OPTION TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON INQUIRY_OPTION TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON INQUIRY_VOTING_LOG TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON INQUIRY_VOTING_LOG TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON LANGUAGE TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON LANGUAGE TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON LANGUAGE_DICTIONARY TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON LANGUAGE_DICTIONARY TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON LOG TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON LOG TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON LOG_OPERATION TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON LOG_OPERATION TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON LOG_ROBOTS TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON LOG_ROBOTS TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON MENU_TREE TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON MENU_TREE TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON MESSAGE_QUEUE TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON MESSAGE_QUEUE TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON MESSAGE_TYPE TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON MESSAGE_TYPE TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON MINI_NEWS TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON MINI_NEWS TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON PERMISSION TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON PERMISSION TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON "ROLE" TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON "ROLE" TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ROLE_HAS_PERMISSION TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON ROLE_HAS_PERMISSION TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON "USER" TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON "USER" TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON USER_HAS_BUILDING_UNIT TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON USER_HAS_BUILDING_UNIT TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON USER_HAS_ROLE TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON USER_HAS_ROLE TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON V_ARTICLE_NOTIFICATIONS TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON V_ARTICLE_NOT_PUBLISHED TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON V_ARTICLE_TOP TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON V_ARTICLE_TOP_EXCL_ROBOTS TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON V_ARTICLE_WITHOUT_ROLE TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON V_INQUIRY_LOG TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON V_LOG TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON V_LOG_BOT_STAT TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON V_LOG_BROWSERS TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON V_LOG_MONTH_COUNTER TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON V_USERS_HAS_ROLE TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON V_USERS_MISSING_ROLE_ALL TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON V_USERS_MISSING_ROLE_VLASTNIK TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON V_USERS_UNITS TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON FAULT_REPORT TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON FAULT_REPORT TO SYSDBA WITH GRANT OPTION;
 
GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON FAULT_REPORT_ATTACHMENT TO ROLE R_WEB;
 
GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON FAULT_REPORT_ATTACHMENT TO SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON FAULT_REPORT_COMMENT TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON FAULT_REPORT_COMMENT TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON FAULT_REPORT_WATCHING TO ROLE R_WEB;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON FAULT_REPORT_WATCHING TO  SYSDBA WITH GRANT OPTION;


/********************* DATA **********************/

COMMIT;

INSERT INTO ADVERT_TYPE (ID, DESCRIPTION) VALUES (10, 'Prodám');
INSERT INTO ADVERT_TYPE (ID, DESCRIPTION) VALUES (20, 'Koupím');
INSERT INTO ADVERT_TYPE (ID, DESCRIPTION) VALUES (30, 'Ostatní');

INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('100', 'menu_administration');
INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('101', 'menu_articles');
INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('102', 'menu_phone_list');
INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('103', 'menu_building_units');
INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('104', 'menu_personal_settings');
INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('105', 'menu_redaction');
INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('106', 'menu_contact');
INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('202', 'can_insert_article_comment');
INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('203', 'can_vote_inquiry');
INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('204', 'can_write_html');
INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('300', 'redaction_articles');
INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('301', 'redaction_articles_all');
INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('302', 'redaction_mini_news');
INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('303', 'redaction_inquiry');
INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('304', 'redaction_menu');
INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('400', 'menu_fault_reporting');
INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('401', 'fault_reporting_reporter');
INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('402', 'fault_reporting_resolver');
INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('403', 'fault_reporting_comment');
INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('500', 'menu_adverts');
INSERT INTO PERMISSION (ID, DESCRIPTION) VALUES ('501', 'can_insert_advert');

INSERT INTO MESSAGE_TYPE (ID, DESCRIPTION) VALUES ('1', 'e-mail');
INSERT INTO MESSAGE_TYPE (ID, DESCRIPTION) VALUES ('2', 'sms');

INSERT INTO LOG_OPERATION (ID, DESCRIPTION) VALUES ('1', 'login');
INSERT INTO LOG_OPERATION (ID, DESCRIPTION) VALUES ('2', 'logout');
INSERT INTO LOG_OPERATION (ID, DESCRIPTION) VALUES ('3', 'read');
INSERT INTO LOG_OPERATION (ID, DESCRIPTION) VALUES ('4', 'send lost password');
INSERT INTO LOG_OPERATION (ID, DESCRIPTION) VALUES ('5', 'send article notification');
INSERT INTO LOG_OPERATION (ID, DESCRIPTION) VALUES ('6', 'create article');
INSERT INTO LOG_OPERATION (ID, DESCRIPTION) VALUES ('7', 'modify article');
INSERT INTO LOG_OPERATION (ID, DESCRIPTION) VALUES ('8', 'insert attachment');
INSERT INTO LOG_OPERATION (ID, DESCRIPTION) VALUES ('9', 'delete attachment');
INSERT INTO LOG_OPERATION (ID, DESCRIPTION) VALUES ('10', 'read fault');
INSERT INTO LOG_OPERATION (ID, DESCRIPTION) VALUES ('11', 'create fault');
INSERT INTO LOG_OPERATION (ID, DESCRIPTION) VALUES ('12', 'modify fault');
INSERT INTO LOG_OPERATION (ID, DESCRIPTION) VALUES ('13', 'close fault');
INSERT INTO LOG_OPERATION (ID, DESCRIPTION) VALUES ('14', 'reopen fault');
INSERT INTO LOG_OPERATION (ID, DESCRIPTION) VALUES ('15', 'insert fault attachment');
INSERT INTO LOG_OPERATION (ID, DESCRIPTION) VALUES ('16', 'delete fault attachment');

INSERT INTO BUILDING_UNIT_TYPE (ID, DESCRIPTION) VALUES (1, 'Byt');
INSERT INTO BUILDING_UNIT_TYPE (ID, DESCRIPTION) VALUES (2, 'Sklep');
INSERT INTO BUILDING_UNIT_TYPE (ID, DESCRIPTION) VALUES (3, 'Komerční prostor');
INSERT INTO BUILDING_UNIT_TYPE (ID, DESCRIPTION) VALUES (4, 'Garáž');

INSERT INTO BOARD_MEMBER_TYPE (ID, DESCRIPTION) VALUES (10, 'předseda');
INSERT INTO BOARD_MEMBER_TYPE (ID, DESCRIPTION) VALUES (20, 'místopředseda');
INSERT INTO BOARD_MEMBER_TYPE (ID, DESCRIPTION) VALUES (30, 'člen');
INSERT INTO BOARD_MEMBER_TYPE (ID, DESCRIPTION) VALUES (40, 'revizor');

INSERT INTO LANGUAGE (ID, DESCRIPTION) VALUES ('1', 'Čeština');
INSERT INTO LANGUAGE (ID, DESCRIPTION) VALUES ('2', 'English');

INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Send notifications', '1', 'Odeslat upozornění');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Send notifications', '2', 'Send notifications');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('notifications has been sent.', '1', 'upozornění bylo odesláno.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('notifications has been sent.', '2', 'notifications has been sent.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Continue here', '1', 'Pokračujte zde');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Continue here', '2', 'Continue here');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Article was not found', '1', 'Článek nebyl nalezen');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Article was not found', '2', 'Article was not found');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Probably you have insufficient permissions.', '1', 'Pravděpodobně nemáte dostatečná oprávnění.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Probably you have insufficient permissions.', '2', 'Probably you have insufficient permissions.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Try to login with your login name and password.', '1', 'Zkuste se přihlásit Vaším přihlašovacím jménem a heslem.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Try to login with your login name and password.', '2', 'You may try to login with your login name and password.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Messages pending', '1', 'Čekající zprávy');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Messages pending', '2', 'Messages pending');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Message list', '1', 'Seznam zpráv');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Message list', '2', 'Message list');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Recipient', '1', 'Příjemce');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Recipient', '2', 'Recipient');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Subject', '1', 'Předmět');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Subject', '2', 'Subject');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Time of creation', '1', 'Čas vytvoření');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Time of creation', '2', 'Time of creation');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Export to Excel', '1', 'Export do Excelu');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Export to Excel', '2', 'Export to Excel');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('tiny_mce.language', '1', 'cs');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('tiny_mce.language', '2', 'en');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Articles', '1', 'Články');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Articles', '2', 'Articles');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Contact list', '1', 'Seznam kontaktů');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Contact list', '2', 'Contact list');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Units', '1', 'Jednotky');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Registration No.', '1', 'IČ');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Registration No.', '2', 'Registration No.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('VAT Registration No.', '1', 'DIČ');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('VAT Registration No.', '2', 'VAT Registration No.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Internet domain', '1', 'Internetová doména');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Internet domain', '2', 'Internet domain');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Database creation date', '1', 'Datum založení databáze');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Database creation date', '2', 'Database creation date');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Save', '1', 'Uložit');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Save', '2', 'Save');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Registration Id.', '1', 'Id. katastru nemovitostí');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Registration Id.', '2', 'Registration Id.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Filter', '1', 'Filtr');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Filter', '2', 'Filter');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('all', '1', 'vše');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('all', '2', 'all');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('All', '1', 'Vše');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('All', '2', 'All');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Id', '1', 'Id');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Id', '2', 'Id');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Type', '1', 'Typ');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Type', '2', 'Type');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Description', '1', 'Popis');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Description', '2', 'Description');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Numerator', '1', 'Čitatel');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Numerator', '2', 'Numerator');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Denominator', '1', 'Jmenovatel');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Denominator', '2', 'Denominator');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Edit', '1', 'Editovat');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Edit', '2', 'Edit');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Delete', '1', 'Smazat');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Delete', '2', 'Delete');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Really do you want to remove unit', '1', 'Opravdu chcete smazat jednotku');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Really do you want to remove unit', '2', 'Really do you want to remove unit');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add new building unit', '1', 'Přidat novou jednotku');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add new building unit', '2', 'Add new building unit');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Building unit', '1', 'Jednotka');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Building unit', '2', 'Building unit');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add new user', '1', 'Přidat nového uživatele');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add new user', '2', 'Add new user');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Last name', '1', 'Příjmení');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Last name', '2', 'Last name');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('First name', '1', 'Jméno');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('First name', '2', 'First name');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Salutation', '1', 'Oslovení');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Salutation', '2', 'Salutation');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Login', '1', 'Login');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Login', '2', 'Login');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Enabled', '1', 'Povolen');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Enabled', '2', 'Enabled');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('In contact list', '1', 'V kontaktech');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('In contact list', '2', 'In contact list');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Really do you want to remove user', '1', 'Opravdu chcete odstranit uživatele');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Really do you want to remove user', '2', 'Really do you want to remove user');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('yes', '1', 'ano');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('yes', '2', 'yes');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('no', '1', 'ne');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('no', '2', 'no');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('User', '1', 'Uživatel');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('User', '2', 'User');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Language', '1', 'Jazyk');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Language', '2', 'Language');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Country', '1', 'Země');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Country', '2', 'Country');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Fixed phone', '1', 'Pevná linka');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Fixed phone', '2', 'Fixed phone');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Cell phone', '1', 'Mobil');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Cell phone', '2', 'Cell phone');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Show in contact list', '1', 'Ukázat v kontaktech');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Show in contact list', '2', 'Show in contact list');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Person', '1', 'Osoba');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Person', '2', 'Person');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Contact information', '1', 'Kontaktní informace');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Contact information', '2', 'Contact information');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Login information', '1', 'Přihlašovací údaje');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Login information', '2', 'Login information');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Member of', '1', 'Je členem');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Member of', '2', 'Member of');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add new role', '1', 'Přidat novou roli');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add new role', '2', 'Add new role');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Num. of users', '1', 'Počet uživatelů');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Num. of users', '2', 'Num. of users');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Really do you want to remove role', '1', 'Opravdu chcete odstranit roli');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Really do you want to remove role', '2', 'Really do you want to remove role');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Role', '1', 'Role');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Role', '2', 'Role');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Permissions', '1', 'Oprávnění');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Permissions', '2', 'Permissions');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Property list', '1', 'Seznam vlastností');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Property list', '2', 'Property list');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Key', '1', 'Klíč');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Key', '2', 'Key');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Value', '1', 'Hodnota');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Value', '2', 'Value');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Really do you want to remove property', '1', 'Opravdu chcete smazat vlastnost');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Really do you want to remove property', '2', 'Really do you want to remove property');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add new property', '1', 'Přidat novou vlastnost');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add new property', '2', 'Add new property');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Property', '1', 'Vlastnost');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Property', '2', 'Property');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Article list', '1', 'Seznam článků');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Article list', '2', 'Article list');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add new article', '1', 'Přidat nový článek');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add new article', '2', 'Add new article');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Article', '1', 'Článek');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Article', '2', 'Article');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Menu', '1', 'Menu');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Menu', '2', 'Menu');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Author', '1', 'Autor');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Author', '2', 'Author');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Date', '1', 'Datum');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Date', '2', 'Date');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Published', '1', 'Publikován');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Published', '2', 'Published');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('News list', '1', 'Seznam novinek');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('News list', '2', 'News list');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Inquiry list', '1', 'Seznam anket');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Inquiry list', '2', 'Inquiry list');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Header', '1', 'Nadpis');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Header', '2', 'Header');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Body', '1', 'Tělo');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Body', '2', 'Body');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Enable comments', '1', 'Povolit komentáře');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Enable comments', '2', 'Enable comments');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Publish article', '1', 'Zveřejnit článek');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Publish article', '2', 'Publish article');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Visible for', '1', 'Viditelný pro');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Visible for', '2', 'Visible for');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Attachments', '1', 'Přílohy');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Attachments', '2', 'Attachments');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('File', '1', 'Soubor');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('File', '2', 'File');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Insert attachment', '1', 'Vložit přílohu');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Insert attachment', '2', 'Insert attachment');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Really do you want to remove attachment', '1', 'Opravdu chcete smazat přílohu');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Really do you want to remove attachment', '2', 'Really do you want to remove attachment');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Password change', '1', 'Změna hesla');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Password change', '2', 'Password change');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Most readed articles', '1', 'Nejčtenější články');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Most readed articles', '2', 'Most readed articles');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add new mini news', '1', 'Přidat novinku');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add new mini news', '2', 'Add new mini news');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Time', '1', 'Čas');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Time', '2', 'Time');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Mini news', '1', 'Novinka');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Mini news', '2', 'Mini news');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Really do you want to remove news', '1', 'Opravdu chcete smazat novinku');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Really do you want to remove news', '2', 'Really do you want to remove news');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('News', '1', 'Novinky');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('News', '2', 'News');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('JAN', '1', 'LED');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('JAN', '2', 'JAN');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('FEB', '1', 'ÚNO');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('FEB', '2', 'FEB');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('MAR', '1', 'BŘE');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('MAR', '2', 'MAR');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('APR', '1', 'DUB');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('APR', '2', 'APR');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('MAY', '1', 'KVĚ');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('MAY', '2', 'MAY');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('JUN', '1', 'ČEN');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('JUN', '2', 'JUN');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('JUL', '1', 'ČEC');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('JUL', '2', 'JUL');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('AUG', '1', 'SRP');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('AUG', '2', 'AUG');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('SEP', '1', 'ZÁŘ');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('SEP', '2', 'SEP');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('OCT', '1', 'ŘÍJ');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('OCT', '2', 'OCT');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('NOV', '1', 'LIS');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('NOV', '2', 'NOV');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('DEC', '1', 'PRO');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('DEC', '2', 'DEC');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Inquiry', '1', 'Anketa');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Inquiry', '2', 'Inquiry');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Options', '1', 'Volby');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Options', '2', 'Options');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Starting date', '1', 'Počáteční datum');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Starting date', '2', 'Starting date');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Ending date', '1', 'Koncové datum');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Ending date', '2', 'Ending date');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Publish', '1', 'Zveřejnit');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Publish', '2', 'Publish');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add new inquiry', '1', 'Přidat novou anketu');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add new inquiry', '2', 'Add new inquiry');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('votes', '1', 'hlasování');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('votes', '2', 'votes');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Vote', '1', 'Hlasuj');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Vote', '2', 'Vote');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Owner list', '1', 'Seznam vlastníků');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Owner list', '2', 'Owner list');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add', '1', 'Přidat');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add', '2', 'Add');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Contact', '1', 'Kontakt');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Contact', '2', 'Contact');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Current password', '1', 'Současné heslo');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Current password', '2', 'Current password');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('New password', '1', 'Nové heslo');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('New password', '2', 'New password');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('New password again', '1', 'Nové heslo ještě jednou');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('New password again', '2', 'New password again');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('You typed wrong current password.', '1', 'Zadané současné heslo není správné.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('You typed wrong current password.', '2', 'You typed wrong current password.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Password is too short. Minimum is 6 characters.', '1', 'Heslo je příliš krátké. Minimální délka je 6 znaků.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Password is too short. Minimum is 6 characters.', '2', 'Password is too short. Minimum is 6 characters.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('New password has been set.', '1', 'Nové heslo bylo nastaveno.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('New password has been set.', '2', 'New password has been set.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('New passwords doesnt match.', '1', 'Nová hesla si neodpovídají.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('New passwords doesnt match.', '2', 'New passwords doesnt match.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Article menu node', '1', 'Položka menu');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Article menu node', '2', 'Menu node');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Parent node', '1', 'Nadřazená položka');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Administration', '1', 'Administrace');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Administration', '2', 'Administration');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Categories:', '1', 'Kategorie:');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Categories:', '2', 'Categories:');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Search:', '1', 'Vyhledat:');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Search:', '2', 'Search:');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Search', '1', 'Vyhledat');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Search', '2', 'Search');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Login:', '1', 'Přihlášení:');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Login:', '2', 'Login:');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Name', '1', 'Jméno');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Name', '2', 'Name');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Password', '1', 'Heslo');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Password', '2', 'Password');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Log-in', '1', 'Přihlásit');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Log-in', '2', 'Login');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('User:', '1', 'Uživatel:');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('User:', '2', 'User:');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Logout', '1', 'Odhlásit');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Logout', '2', 'Logout');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Published:', '1', 'Publikováno:');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Published:', '2', 'Published:');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('by:', '1', 'Autor:');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('by:', '2', 'by:');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Comments:', '1', 'Komentáře:');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Comments:', '2', 'Comments:');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Pages:', '1', 'Stránky:');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Pages:', '2', 'Pages:');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Attachments:', '1', 'Přílohy:');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Attachments:', '2', 'Attachments:');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Insert comment', '1', 'Vložit komentář');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Insert comment', '2', 'Insert comment');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Company', '1', 'Společenství');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Company', '2', 'Company');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Building', '1', 'Dům');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Building', '2', 'Building');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Parent node', '2', 'Parent node');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('(top level)', '1', '(na vrcholu)');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('(top level)', '2', '(top level)');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add new menu node', '1', 'Přidat novou položku menu');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add new menu node', '2', 'Add new menu node');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Menu node name', '1', 'Název položky menu');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Menu node name', '2', 'Menu node name');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Really do you want to remove menu node', '1', 'Opravdu chcete smazat položku menu');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Really do you want to remove menu node', '2', 'Really do you want to remove menu node');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Last login', '1', 'Poslední přihlášení');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Last login', '2', 'Last login');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Login is not valid.', '1', 'Login není platný');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Login is not valid.', '2', 'Login is not valid.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Login already exists.', '1', 'Login už existuje.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Login already exists.', '2', 'Login already exists.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('User has been saved.', '1', 'Uživatel byl uložen.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('User has been saved.', '2', 'User has been saved.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Building picture (size 529 x 94 px)', '1', 'Obrázek domu (rozměr 940 x 94 bodů)');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Building picture (size 529 x 94 px)', '2', 'Building picture (size 940 x 94 px)');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Insert picture', '1', 'Vložit obrázek');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Insert picture', '2', 'Insert picture');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Go to homepage', '1', 'Přejít na domovskou stránku');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Go to homepage', '2', 'Go to homepage');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Forgot password?', '1', 'Zapomněli jste heslo?');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Forgot password?', '2', 'Forgot password?');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Password assistance', '1', 'Zaslání hesla e-mailem');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Password assistance', '2', 'Password assistance');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Your e-mail', '1', 'Váš e-mail');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Your e-mail', '2', 'Your e-mail');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Send', '1', 'Odeslat');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Send', '2', 'Send');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('You can continue', '1', 'Pokračujte');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('You can continue', '2', 'You can continue');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('here', '1', 'zde');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('here', '2', 'here');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Your login and password were sent to your mail.', '1', 'Váš login a heslo byly odeslány mailem.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Your login and password were sent to your mail.', '2', 'Your login and password were sent to your mail.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('There is not user assigned to e-mail.', '1', 'Omlouváme se, ale s Vámi zadaným mailem není spojen žádný uživatel.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('There is not user assigned to e-mail.', '2', 'There is not user assigned to e-mail.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Bad login', '1', 'Vámi zadané přihlašovací údaje nejsou správné');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Bad login', '2', 'Bad login');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Units', '2', 'Units');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Personal settings', '1', 'Osobní nastavení');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Personal settings', '2', 'Personal settings');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Redaction', '1', 'Redakce');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Redaction', '2', 'Redaction');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Building unit list', '1', 'Seznam jednotek');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Building unit list', '2', 'Building unit list');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('User list', '1', 'Seznam uživatelů');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('User list', '2', 'User list');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Role list', '1', 'Seznam rolí');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Role list', '2', 'Role list');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Properties', '1', 'Vlastnosti');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Properties', '2', 'Properties');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Article menu', '1', 'Menu');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Article menu', '2', 'Article menu');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Address', '1', 'Adresa');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Address', '2', 'Address');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('City', '1', 'Město');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('City', '2', 'City');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Post code', '1', 'PSČ');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Post code', '2', 'Post code');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Phone', '1', 'Telefon');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Phone', '2', 'Phone');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Fax', '1', 'Fax');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Fax', '2', 'Fax');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('E-Mail', '1', 'E-Mail');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('E-Mail', '2', 'E-Mail');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('(choose)', '1', '(vyber)');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('(choose)', '2', '(choose)');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('This article is not visible to any user', '1', 'Tento článek není viditelný pro žádného uživatele');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('This article is not visible to any user', '2', 'This article is not visible to any user');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Role filter', '1', 'Filtr role');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Role filter', '2', 'Role filter');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Log', '1', 'Log');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Log', '2', 'Log');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Votes', '1', 'Hlasů');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Votes', '2', 'Votes');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Inquiry log', '1', 'Záznam hlasování');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Inquiry log', '2', 'Inquiry log');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Option', '1', 'Volba');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Option', '2', 'Option');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Disabled users', '1', 'Zakázaní uživatelé');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Disabled users', '2', 'Disabled users');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Password is missing.', '1', 'Heslo je nevyplněné.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Password is missing.', '2', 'Password is missing.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('E-Mail is missing.', '1', 'E-Mail je nevyplněný.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('E-Mail is missing.', '2', 'E-Mail is missing.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Credentials has been send by e-mail.', '1', 'Přihlášení bylo odeslané e-mailem.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Credentials has been send by e-mail.', '2', 'Credentials has been send by e-mail.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Send credentials by e-mail', '1', 'Odeslat přihlášení e-mailem');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Send credentials by e-mail', '2', 'Send credentials by e-mail');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Fault reporting', '1', 'Hlášení závad');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Fault reporting', '2', 'Fault reporting');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('All open', '1', 'Nevyřešené');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('All open', '2', 'All open');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Reported by me', '1', 'Nahlášené mnou');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Reported by me', '2', 'Reported by me');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Assigned to me', '1', 'Přiřazené mě');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Assigned to me', '2', 'Assigned to me');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('All closed', '1', 'Vyřešené');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('All closed', '2', 'All closed');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Report new fault', '1', 'Nahlásit novou závadu');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Report new fault', '2', 'Report new fault');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Ticket id', '1', 'Číslo tiketu');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Ticket id', '2', 'Ticket id');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Resolver', '1', 'Řešitel');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Resolver', '2', 'Resolver');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Closed', '1', 'Uzavřeno');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Closed', '2', 'Closed');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Take this ticket', '1', 'Vzít si tiket k řešení');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Take this ticket', '2', 'Take this ticket');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Close this ticket', '1', 'Uzavřít tiket');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Close this ticket', '2', 'Close this ticket');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Nothing found.', '1', 'Nebylo nic nalezeno.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Nothing found.', '2', 'Nothing found.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Text to be searched should has 3 chars at least.', '1', 'Hledaný text by měl být alespoň 3 znaky dlouhý.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Text to be searched should has 3 chars at least.', '2', 'Text to be searched should has 3 chars at least.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Start watching', '1', 'Sledovat tiket');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Start watching', '2', 'Start watching');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Stop watching', '1', 'Přestat sledovat tiket');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Stop watching', '2', 'Stop watching');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Board', '1', 'Výbor');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Board', '2', 'Board');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add new member', '1', 'Přidat nového člena');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add new member', '2', 'Add new member');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Position', '1', 'Pozice');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Position', '2', 'Position');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Really do you want to remove board member', '1', 'Opravdu chcete odstranit člena');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Really do you want to remove board member', '2', 'Really do you want to remove board member');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Start watching discussion', '1', 'Začít sledovat diskuzi');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Start watching discussion', '2', 'Start watching discussion');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Stop watching discussion', '1', 'Přestat sledovat diskuzi');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Stop watching discussion', '2', 'Stop watching discussion');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Internal note', '1', 'Interní poznámka');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Internal note', '2', 'Internal note');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Building entrance list', '1', 'Seznam vchodů');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Building entrance list', '2', 'Entrance list');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add new building entrance', '1', 'Přidat nový vchod');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add new building entrance', '2', 'Add new entrance');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Really do you want to remove entrance', '1', 'Opravdu chcete odstranit vchod');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Really do you want to remove entrance', '2', 'Really do you want to remove entrance');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Building entrance', '1', 'Vchod');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Building entrance', '2', 'Entrance');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('All articles', '1', 'Všechny články');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('All articles', '2', 'All articles');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add option', '1', 'Přidat volbu');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Add option', '2', 'Add option');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Remove option', '1', 'Odebrat volbu');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Remove option', '2', 'Remove option');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('optional', '1', 'nepovinné');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('optional', '2', 'optional');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Reporter', '1', 'Zadavatel');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Reporter', '2', 'Reporter');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('This entrance cannot be deleted.', '1', 'Vchod nelze smazat.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('This entrance cannot be deleted.', '2', 'This entrance cannot be deleted.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Saved', '1', 'Uloženo');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Saved', '2', 'Saved');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Voting was closed.', '1', 'Hlasování bylo ukončeno.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Voting was closed.', '2', 'Voting was closed.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Adverts', '1', 'Inzeráty');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Adverts', '2', 'Adverts');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Create new advert', '1', 'Zadat nový inzerát');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Create new advert', '2', 'Create new advert');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('My adverts', '1', 'Moje inzeráty');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('My adverts', '2', 'My adverts');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Hide', '1', 'Skrýt');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('Hide', '2', 'Hide');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('E-Mail is not valid.', '1', 'E-Mail není platný.');
INSERT INTO LANGUAGE_DICTIONARY (ID, LANGUAGE_ID, TEXT) VALUES ('E-Mail is not valid.', '2', 'E-Mail is not valid.');
